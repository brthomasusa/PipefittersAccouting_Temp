@typeparam TWriteModel

@inject NavigationManager NavManager
@using Blazorise.Snackbar

<ErrorBoundary>
    <Row>
        <Column>
            <Card Margin="Margin.Is4.OnY">
                <CardHeader>
                    <Heading TextColor="TextColor.Dark" Size="HeadingSize.Is4"
                        Margin="Margin.Is1.FromStart.Is1.FromTop">
                        @FormTitle
                    </Heading>
                </CardHeader>
                <CardBody>
                    @if (WriteModel is not null)
                    {
                        <Validations @ref="_validations" Mode="ValidationMode.Auto" ValidateOnLoad=false Model=@WriteModel>
                            @DataEntryFieldsTemplate
                        </Validations>

                        <Field Margin="Margin.Is4.FromTop">
                            <Button Color="Color.Success" Clicked="OnSave" Loading="@_isLoading">Save changes</Button>
                            <Button Color="Color.Warning" Type="ButtonType.Link" To=@ReturnUri>Cancel editing</Button>
                        </Field>
                        <Snackbar @ref="_snackbar" DefaultInterval=2000 Closed=@( () => NavManager.NavigateTo(@ReturnUri!) )>
                            <SnackbarBody>
                                @SnackBarMessage
                            </SnackbarBody>
                        </Snackbar>
                    }
                    else
                    {
                        <div class="d-flex justify-content-center">
                            <div class="spinner-border" style="width: 3rem; height: 3rem;" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        </div>
                    }

                </CardBody>
                <CardFooter>

                </CardFooter>
            </Card>
        </Column>
    </Row>
</ErrorBoundary>