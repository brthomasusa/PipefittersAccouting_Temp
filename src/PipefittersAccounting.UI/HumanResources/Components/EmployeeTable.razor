@inject ILogger<EmployeeTable> logger

<Row>
    <Column>
        <Card Margin="Margin.Is4.OnY">
            <CardHeader>
                <Row>
                    <Column ColumnSize="ColumnSize.Is3">
                        <Button Color="Color.Primary" Size="Size.ExtraLarge" Type="ButtonType.Link"
                            To="HumanResouces/Pages/EmployeeCreate" Outline>+</Button>
                    </Column>
                    <Column ColumnSize="ColumnSize.Is9">
                        <EmployeeSearch OnSearchChanged=@SearchChanged />
                    </Column>
                </Row>
            </CardHeader>
            <CardBody>
                @if (Employees is not null && Employees.Any())
                {
                    <Table Bordered Striped Hoverable Narrow Responsive>
                        <TableHeader ThemeContrast="ThemeContrast.Light">
                            <TableRow>
                                <TableHeaderCell>Name</TableHeaderCell>
                                <TableHeaderCell>Telephone</TableHeaderCell>
                                <TableHeaderCell>Active?</TableHeaderCell>
                                <TableHeaderCell>Manager?</TableHeaderCell>
                                <TableHeaderCell>Manager Name</TableHeaderCell>
                                <TableHeaderCell>Actions</TableHeaderCell>
                            </TableRow>
                        </TableHeader>
                        <TableBody>
                            @foreach (var listItem in Employees)
                            {
                                <TableRow>
                                    <TableRowCell>@listItem.EmployeeFullName</TableRowCell>
                                    <TableRowCell>@listItem.Telephone</TableRowCell>
                                    <TableRowCell>@(listItem.IsActive ? "Yes" : "No")</TableRowCell>
                                    <TableRowCell>@(listItem.IsSupervisor ? "Yes" : "No")</TableRowCell>
                                    <TableRowCell>@listItem.ManagerFullName</TableRowCell>
                                    <TableRowCell>
                                        <Dropdown Direction="Direction.Up">
                                            <DropdownToggle Outline Size="Size.ExtraSmall" Color="Color.Primary">
                                                ...
                                            </DropdownToggle>
                                            <DropdownMenu>
                                                <DropdownItem
                                            Clicked="@( () => OnMenuItemClicked("ShowDetails", @listItem.EmployeeId) )">
                                                    Details
                                                </DropdownItem>
                                                <DropdownItem
                                            Clicked="@( () => OnMenuItemClicked("Edit", @listItem.EmployeeId) )">
                                                    Edit
                                                </DropdownItem>
                                                <DropdownItem
                                            Clicked="@( () => OnMenuItemClicked("Delete", @listItem.EmployeeId) )">
                                                    Delete
                                                </DropdownItem>
                                            </DropdownMenu>
                                        </Dropdown>
                                    </TableRowCell>
                                </TableRow>
                            }
                        </TableBody>
                    </Table>
                }
                else
                {
                    <span>Loading employee list...</span>
                }
            </CardBody>
            <CardFooter>
                <DynamicPager />
            </CardFooter>
        </Card>
    </Column>
</Row>
