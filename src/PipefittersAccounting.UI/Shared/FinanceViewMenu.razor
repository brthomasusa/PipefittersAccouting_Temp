@inject NavigationManager NavManager

<Bar Breakpoint="Breakpoint.Desktop" Background="Background.Dark" ThemeContrast="ThemeContrast.Dark">
    <BarToggler />
    <BarMenu>
        <BarStart>
            <BarItem>
                <BarLink To="Finance/Pages/Financiers/Financiers">Financiers</BarLink>
            </BarItem>
            <BarItem>
                <BarLink To="Finance/Pages/LoanAgreements/LoanAgreements">Loan Agreements</BarLink>
            </BarItem>
            <BarItem>
                <BarLink To="Finance/Pages/StockSubscriptions/StockSubscriptions">Stock Subscriptions</BarLink>
            </BarItem>
            <BarItem>
                <BarDropdown>
                    <BarDropdownToggle Color="Color.Info" Outline>Cash Management</BarDropdownToggle>
                    <BarDropdownMenu>
                        <BarDropdownToggle>Cash Management</BarDropdownToggle>
                        <BarDropdownItem Clicked="@( () => OnMenuItemClicked("CashAccount") )">Cash Accounts
                        </BarDropdownItem>
                        <BarDropdownItem Clicked="@( () => OnMenuItemClicked("Deposit") )">Deposits</BarDropdownItem>
                        <BarDropdownItem>Disburements</BarDropdownItem>
                        <BarDropdownItem>Adjustments</BarDropdownItem>
                        <BarDropdownItem>Transfers</BarDropdownItem>
                    </BarDropdownMenu>
                </BarDropdown>
            </BarItem>
        </BarStart>
        <BarEnd>
            <BarItem class="mr-4">
                <Button Margin="Margin.Is3.FromEnd" Color="Color.Secondary" Size="Size.Small">Log in</Button>
            </BarItem>
        </BarEnd>
    </BarMenu>
</Bar>


@code {
    private void OnMenuItemClicked(string itemName)
    {
        NavManager.NavigateTo
        (
        itemName switch
        {
            "CashAccount" => "Finance/Pages/CashManagement/CashAccounts",
            "Deposit" => "Finance/Pages/CashManagement/CashDeposits",
            _ => throw new ArgumentOutOfRangeException(nameof(itemName), $"Not expected direction value: {itemName}"),
        }
        );
    }
}